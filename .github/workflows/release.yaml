name: Release
on:
  push:
    tags:
      - 'v*'
jobs:
  node-build:
    uses: ./.github/workflows/base-node.yaml
    with:
      node-version: 22
      upload: true
  node-release:
    needs:
      - node-build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'yarn'
        cache-dependency-path: node/yarn.lock

    - name: Set Environment Variables
      run: |
        echo "runner_arch=$(uname -m)" | tee -a $GITHUB_ENV
        echo "package_version=${GITHUB_REF#refs/*/v}" | tee -a $GITHUB_ENV

    - name: Set version
      run: node ./.ci/node-set-version.js --package-json node/package.json ${{ env.package_version }}

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: node-lib
        path: node/lib/
    - run: ls -alR node/lib/

    - name: Publish
      run: |
        cd node
        yarn config set npmAuthToken "${NPM_TOKEN}"
        yarn npm publish --access=public
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  java-build:
    uses: ./.github/workflows/base-java.yaml
    with:
      upload: true
  java-release:
    needs:
      - java-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
          cache: 'gradle'

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: java-build
          path: java/build/
      - run: ls -al java/build/

      - id: install-secret-key
        name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
      - id: publish-to-central
        name: Publish to Central Repository
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        run: |
          cd java
          chmod +x gradlew
          ./gradlew :publish -Psigning.gnupg.keyName=243D34DB9C8DC5809A818BF105BDFD8B158B5001 -Psigning.gnupg.executable=gpg -PossrhUsername=${{ secrets.OSSRH_TOKEN_USERNAME }} -PossrhPassword=${{ secrets.OSSRH_TOKEN_PASSWORD }} -Psigning.gnupg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
